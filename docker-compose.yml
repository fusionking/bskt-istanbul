version: "3.7"
services:
  django:
    build: ./backend
    platform: linux/amd64
    volumes:
      - ./backend:/app/backend
      - ./docs:/app/docs
    ports:
      - "8000:8000"
    stdin_open: true
    tty: true
    depends_on:
      - postgres
    environment:
      - DATABASE_USER=basket_user
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=basket
      - DATABASE_HOST=postgres
      - DJANGO_SETTINGS_MODULE=backend.settings.development
      - REDIS_URL=redis://redis:6379/0
      - MAILJET_SECRET_KEY=
      - MAILJET_API_KEY=
      - MAIL_ENABLED=False
    entrypoint: /app/backend/docker/server-entrypoint.sh
  worker:
    restart: unless-stopped
    build: ./backend
    entrypoint: /app/backend/docker/worker-entrypoint.sh
    environment:
      - DATABASE_USER=basket_user
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=basket
      - DATABASE_HOST=postgres
      - DJANGO_SETTINGS_MODULE=backend.settings.development
      - REDIS_URL=redis://redis:6379/0
      - MAILJET_SECRET_KEY=
      - MAILJET_API_KEY=
      - MAIL_ENABLED=False
    depends_on:
        - django
        - redis
  react:
    build: ./frontend
    stdin_open: true
    tty: true
    volumes:
      - ./frontend:/app
      # One-way volume to use node_modules from inside image
      - /app/node_modules
    ports:
      - "80:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - django
    command: npm start
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=basket
      - POSTGRES_USER=basket_user
      - POSTGRES_PASSWORD=password
  redis:
    image: redis:latest
    expose:
      - 6379
